{"name":"Comdet","tagline":"The purpose of packge is to detect relationship between graph nodes. It detects the overall community structure","body":"comdet\r\n======\r\nComdet stands for community detection.\r\nIn the study of complex networks, a network is said to have community structure if the nodes of the network can be easily grouped into (potentially overlapping) sets of nodes such that each set of nodes is densely connected internally.\r\n\r\ncomdet is used to detect community among graph nodes. Its based on lovain method\r\nPypi page for comdet module is at \r\n   https://pypi.python.org/pypi/comdet/\r\n   \r\nIt is based on louvain method for community detection problem in given graph nodes\r\n   https://sites.google.com/site/findcommunities/\r\n   \r\nInstallation\r\n-------------\r\nEasy install\r\n```shell\r\neasy_install comdet\r\n````\r\n\r\nPip:\r\n```shell\r\n$pip install comdet\r\n```\r\n\r\nor just download the package from here and use it as stand alone.\r\n\r\nUsage\r\n-------------\r\n####Sample python file\r\n```\r\nfrom comdet import comdet\r\nresult = comdet.detect(\"input\", debug=True)\r\nprint result\r\n```\r\n\r\n####Interface.\r\nFollowing iterface is used to interact with comdet package\r\n```\r\ncomdet.detect(inputfile, nop = -1, debug = False)\r\n```\r\n* inputfile - The inputfile to the package.\r\n* nop       - number of passes upto which the community detection will run. by default it is infinity.\r\n* debug     - used to debug information\r\n\r\n####Input file\r\n\r\nInput files  contains space separated src dst pair of graph nodes\r\neg.\r\n```shell\r\nDL0 DL4\r\nDL3 DL6\r\nDL8 DL2\r\nDL4 DL3\r\nDL2 DL2\r\nDL3 DL4\r\nDL2 DL8\r\nDL8 DL4\r\nDL0 DL7\r\nDL10 DL4\r\nDL9 DL6\r\nDL8 DL6\r\nDL2 DL8\r\nDL9 DL10\r\nDL8 DL8\r\nDL4 DL9\r\n.\r\n.\r\n.\r\n```\r\n####Output\r\n\r\nOutput is nested list of community structure.\r\n```shell\r\n[[[[['DL23', 'DL19', 'DL27']], [['DL28', 'DL26', 'DL20'], ['DL44'], ['DL38', 'DL46', 'DL42'], ['DL10', 'DL6', 'DL1', 'DL2', 'DL0'], ['DL34', 'DL37']]]]]\r\n```\r\n```\r\nThe above output consist of 4 passes.\r\nPass 1 => \r\n1Group1 - ['DL23', 'DL19', 'DL27']]\r\n1Group2 - ['DL28', 'DL26', 'DL20']\r\n1Group3 - ['DL44']\r\n1Group4 - ['DL10', 'DL6', 'DL1', 'DL2', 'DL0']\r\n1Group5 - ['DL34', 'DL37']\r\n\r\nPass2  => \r\nNow nodes of previous pass group together to form mode strong community.\r\n2Group1 - [1Group1]\r\n2Group2 - [1Group2, 1Group3, 1Group4, 1Group5]\r\n\r\nPass3  =>\r\n3Group1 - [2Group1, 2Group3]\r\n\r\nPass4 => \r\n4Group1 - [3Group1]\r\n\r\nPass5 => \r\n5Group1 - [4Group1]\r\nNow as the number of community in pass4 and Pass5 are same the processing stops and pass 4 output is taken.\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}